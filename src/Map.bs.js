// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var GoogleMapReact = require("google-map-react");
var Data$ReactHooksTemplate = require("./utils/Data.bs.js");
var Utils$ReactHooksTemplate = require("./utils/Utils.bs.js");
var Marker$ReactHooksTemplate = require("./utils/Marker.bs.js");

function Map$Component(Props) {
  var match = Props.lat;
  var lat = match !== undefined ? match : "50.06";
  var match$1 = Props.long;
  var $$long = match$1 !== undefined ? match$1 : "19.94";
  var match$2 = Props.isoCode;
  var isoCode = match$2 !== undefined ? match$2 : "PL";
  var match$3 = Props.withUserLocation;
  var withUserLocation = match$3 !== undefined ? match$3 : false;
  var selected = Props.selected;
  var onMarkerPress = Props.onMarkerPress;
  return React.createElement("div", {
              style: {
                border: "1px solid gray",
                height: "98vh",
                position: "fixed",
                width: "75%"
              }
            }, React.createElement(GoogleMapReact.default, {
                  defaultZoom: 12,
                  defaultCenter: /* record */[
                    /* lat */Caml_format.caml_float_of_string(lat),
                    /* lng */Caml_format.caml_float_of_string($$long)
                  ],
                  bootstrapURLKeys: {
                    key: Utils$ReactHooksTemplate.apiKey
                  },
                  children: null
                }, withUserLocation ? React.createElement(Marker$ReactHooksTemplate.make, {
                        lat: lat,
                        lng: $$long,
                        isoCode: isoCode,
                        onMarkerPress: (function (param) {
                            return /* () */0;
                          })
                      }) : null, $$Array.of_list(List.map((function (i) {
                            var match = Data$ReactHooksTemplate.getByCode(i);
                            if (match !== undefined) {
                              var country = match;
                              var match$1 = country[/* latlng */1];
                              return React.createElement(Marker$ReactHooksTemplate.make, {
                                          lat: match$1[0],
                                          lng: match$1[1],
                                          isoCode: country[/* country_code */3],
                                          onMarkerPress: (function (param) {
                                              return Curry._1(onMarkerPress, country[/* name */2]);
                                            }),
                                          key: i
                                        });
                            } else {
                              return null;
                            }
                          }), selected))));
}

var Component = /* module */[/* make */Map$Component];

var component = ReasonReact.statelessComponent("FixForReasonApolloJsxV3");

function make($staropt$star, $staropt$star$1, $staropt$star$2, $staropt$star$3, selected, onMarkerPress, _children) {
  var lat = $staropt$star !== undefined ? $staropt$star : "50.06";
  var $$long = $staropt$star$1 !== undefined ? $staropt$star$1 : "19.94";
  var isoCode = $staropt$star$2 !== undefined ? $staropt$star$2 : "PL";
  var withUserLocation = $staropt$star$3 !== undefined ? $staropt$star$3 : false;
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              return React.createElement(Map$Component, {
                          lat: lat,
                          long: $$long,
                          isoCode: isoCode,
                          withUserLocation: withUserLocation,
                          selected: selected,
                          onMarkerPress: onMarkerPress
                        });
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.Component = Component;
exports.component = component;
exports.make = make;
/* component Not a pure module */
